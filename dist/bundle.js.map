{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/howler/dist/howler.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/coord.js","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/ghost.js","webpack:///./src/index.js","webpack:///./src/light.js","webpack:///./src/map.js","webpack:///./src/player.js","webpack:///./src/util.js","webpack:///./src/wall.js"],"names":["Coord","x","y","otherCoord","Math","abs","floor","module","exports","Player","require","Map","Wall","Light","Ghost","Game","canvas","level","ctx","getContext","LEVELS","walls","map","row","scalar","index","width","height","info","window","player","playerStart","light","ghosts","ghost","active","concat","allObjects","forEach","object","draw","coord","some","wall","topLeft","bottomRight","revealed","pos","setTimeout","activate","move","equals","revealGhost","moveGhosts","Howl","Howler","GameView","passCallback","winningCallback","losingCallback","game","setMusic","pianoMusic","src","loop","autoplay","volume","addEventListener","e","KEYS","key","setMousePosition","event","rect","getBoundingClientRect","mouseX","clientX","left","mouseY","clientY","top","update","bindControlHandlers","dirKeys","requestAnimationFrame","animate","bind","escaped","playerKilled","fillStyle","fillRect","step","playerEscaped","Util","startX","startY","vector","unitVector","normalize","dir","direction","newX","SPEED","newY","newCoord","collidingWithWall","document","console","log","launch","getElementById","body","getElementsByTagName","offsetWidth","innerHeight","splashes","querySelectorAll","splash","style","visibility","pass","win","lose","start","removeEventListener","levelSplash","victoryLine","innerHTML","id","el","winSplash","loseSplash","cursPos","a","b","c","sqrt","angleRad","atan","findCursorSlope","angleDeg","PI","l","pX","pY","t","m","isFinite","dx","dy","q","findTriTop","p","x1","y1","x2","y2","x3","y3","findCorner1","findCorner2","A","area","A1","A2","A3","sumAreas","x_midpoint","y_midpoint","diffX","diffY","setTransform","rotate","atan2","beginPath","moveTo","lineTo","closePath","gradient","createLinearGradient","addColorStop","globalAlpha","fill","level_header","level_header_2","wallColor","color","arc","MOVES","tryCoordTopLeft","tryCoordBottomLeft","tryCoordTopRight","tryCoordBottomRight","escapedMap","sqrt2d2","SQRT2","inherits","Child","Parent","Surrogate","prototype","constructor","vec","norm","magnitude","scale","pow","randomVec","length","deg","random","sin","cos","topX","topY","bottomX","bottomY"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA,yBAAyB,cAAc;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA,uBAAuB,cAAc;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA,sCAAsC,MAAM;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;;AAEA;AACA,6EAA6E;AAC7E;AACA,iDAAiD;AACjD,gDAAgD;AAChD,gDAAgD;AAChD,iDAAiD;AACjD,gDAAgD;AAChD,kDAAkD;AAClD,mDAAmD,uCAAuC,uCAAuC;AACjI,mDAAmD,uCAAuC,uCAAuC;AACjI,mDAAmD,uCAAuC,uCAAuC;AACjI,kDAAkD;AAClD,kDAAkD;AAClD,kDAAkD;AAClD,qDAAqD,wCAAwC;AAC7F;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA,yBAAyB,cAAc;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,YAAY;AAC5C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,4CAA4C,kBAAkB;AAC9D,4CAA4C,kBAAkB;AAC9D,oCAAoC,cAAc;AAClD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,sCAAsC,eAAe;AACrD,kCAAkC,aAAa;AAC/C,kCAAkC,aAAa;AAC/C,sCAAsC,eAAe;AACrD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB,QAAQ;AACxB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,2BAA2B,IAAI,eAAe;AAC1E;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,MAAM;AACvC;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,kDAAkD,EAAE;AACnE;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,GAAG;AACrB;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM,IAA0C;AAChD,IAAI,iCAAO,EAAE,mCAAE;AACf;AACA;AACA;AACA;AACA,KAAK;AAAA,oGAAC;AACN;;AAEA;AACA,MAAM,IAA8B;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,0CAA0C;AAC7C;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,MAAM;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,eAAe;AACrD,gCAAgC,YAAY;AAC5C,gDAAgD,oBAAoB;;AAEpE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,YAAY;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,SAAS;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,cAAc,MAAM;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACxpGD;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;A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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","class Coord {\n  constructor(x, y){\n    this.x = x;\n    this.y = y;\n  }\n\n  equals(otherCoord){\n    return (Math.abs(Math.floor(this.x) - Math.floor(otherCoord.x)) < 7)\n      && (Math.abs(Math.floor(this.y) - Math.floor(otherCoord.y)) < 7)\n  }\n}\n\nmodule.exports = Coord;","const Player = require('./player');\nconst Map = require('./map');\nconst Wall = require('./wall');\nconst Light = require('./light');\nconst Ghost = require('./ghost');\n\nclass Game {\n  constructor(canvas, level) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.level = Map.LEVELS[level];\n    this.walls = this.level[\"walls\"]\n                  .map(row => {\n                    return row.map((scalar, index) => {\n                      if (index % 2 === 0) {\n                        return scalar * canvas.width;\n                      } else {\n                        return scalar * canvas.height;\n                      }\n                    })\n                  })\n                  .map(info => new Wall(...info));\n\n    window.player = this.player = new Player(\n      (this.level.playerStart.x * canvas.width),\n      (this.level.playerStart.y * canvas.height),\n      this\n      )\n\n    window.light = this.light = new Light(this.player);\n\n    this.ghosts = [];\n    if (this.level.ghosts) {\n      this.ghosts = this.level.ghosts.map( ghost => {\n        return new Ghost(\n          ghost.x * canvas.width,\n          ghost.y * canvas.height,\n          this,\n          ghost.active\n        )\n      })\n    }\n  }\n\n  allObjects() {\n    return [].concat( this.walls, this.light, this.ghosts, this.player);\n  }\n\n  draw(ctx) {\n    this.allObjects().forEach(object => {\n      object.draw(ctx);\n    });\n  }\n\n  collidingWithWall(coord){\n    return this.walls.some( wall => {\n      return !(\n        (coord.x < wall.topLeft.x)\n          || (coord.x > wall.bottomRight.x)\n          || (coord.y < wall.topLeft.y)\n          || (coord.y > wall.bottomRight.y)\n      )\n    })\n  }\n\n  escapedMap(coord){\n    return (\n      (coord.x < 0) || \n      (coord.y < 0) || \n      (coord.x > canvas.width) || \n      (coord.y > canvas.height)\n    );\n  }\n\n  revealGhost(){\n    const light = this.light;\n    return this.ghosts.some( ghost => {\n      if (light.revealed(ghost.pos.x, ghost.pos.y)) {\n        setTimeout(() => ghost.activate(), 1000);\n      }\n    })\n  }\n\n  moveGhosts(){\n    for (let ghost of this.ghosts) {\n      ghost.move();\n    }\n  }\n\n  playerKilled(){\n    return this.ghosts.some(ghost => {\n      if (!ghost.active) { return; }\n      return ghost.pos.equals(this.player.pos);\n    });\n  }\n\n  step(){\n    this.revealGhost();\n    this.moveGhosts();\n  }\n\n}\n\nmodule.exports = Game;","const Game = require('./game');\nconst { Howl, Howler } = require(\"howler\");\n\nclass GameView {\n  constructor(canvas, level, passCallback, winningCallback, losingCallback) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.game = new Game(canvas, level);\n    this.level = level;\n    this.player = this.game.player;\n    this.light = this.game.light;\n    this.passCallback = passCallback;\n    this.winningCallback = winningCallback;\n    this.losingCallback = losingCallback;\n    this.setMusic();\n    // this.updateBattery();\n  };\n\n  setMusic() {\n    this.pianoMusic = new Howl({ \n      src: ['../dist/assets/piano_music.mp3'], \n      loop: true,\n      autoplay: true });\n    this.pianoMusic.volume(0.5);\n  }\n\n  // updateBattery() {\n  //   let battery = document.getElementById('battery');\n  //   setInterval(() => {\n  //     battery.value -= 50;\n  //   }, 1000);\n\n  //   if (battery.value === 0) this.light.toggleLight();\n  // }\n\n  // control bindings\n  bindControlHandlers() {\n    window.addEventListener(\"keydown\", (e) => {\n      GameView.KEYS[e.key] = true;\n    });\n\n    window.addEventListener(\"keyup\", (e) => {\n      GameView.KEYS[e.key] = false;\n    });\n      \n    window.addEventListener(\"mousemove\",(e) => { \n      this.setMousePosition(this.canvas, e); \n    }); \n  } \n\n  dirKeys() {\n    const player = this.player;\n\n    if (GameView.KEYS['w'] && GameView.KEYS['a']) {\n      player.move(\"UL\");\n    } else if (GameView.KEYS['w'] && GameView.KEYS['d']){\n      player.move(\"UR\")\n    } else if (GameView.KEYS['s'] && GameView.KEYS['a']){\n      player.move(\"DL\");\n    } else if (GameView.KEYS['s'] && GameView.KEYS['d']){\n      player.move(\"DR\");\n    } else if (GameView.KEYS['a']) {\n      player.move(\"L\");\n    } else if (GameView.KEYS['d']) {\n      player.move(\"R\");\n    } else if (GameView.KEYS['w']) {\n      player.move(\"U\");\n    } else if (GameView.KEYS['s']) {\n      player.move(\"D\");\n    } // else if --> space bar --> toggle light\n  }\n\n  // mouse bindings\n  setMousePosition(canvas, event) { \n    let rect = canvas.getBoundingClientRect(); \n    let mouseX = event.clientX - rect.left; \n    let mouseY = event.clientY - rect.top;\n\n    // requestAnimationFrame(this.light.update(mouseX, mouseY));\n    this.light.update(mouseX, mouseY);\n  }\n\n  start(){\n    // bind key and mouse handlers\n    this.bindControlHandlers();\n    this.dirKeys();\n\n    // start the animation\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  playerEscaped(){\n    return this.player.escaped();\n  }\n\n  playerKilled(){\n    //ask game if player collided with ghost\n    return this.game.playerKilled();\n  }\n\n  animate() {\n    this.dirKeys();\n    this.ctx.fillStyle = \"#000\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.game.step();\n    this.game.draw(this.ctx);\n    \n    if (this.playerEscaped()) {\n      if (this.level <= 5) {\n        this.passCallback();\n      } else {\n        this.winningCallback();\n      }\n    } else if (this.playerKilled()){\n      this.losingCallback();\n    } else {\n      // every call to animate requests causes another call to animate\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n};\n\nGameView.KEYS = {};\n\nmodule.exports = GameView;","const Coord = require('./coord');\nconst Util = require('./util');\n\nclass Ghost{\n  constructor(startX, startY, game, active) {\n    this.pos = new Coord(startX, startY);\n    this.game = game;\n    // if (active) { this.activate(); }\n  }\n\n  draw(ctx){\n    ctx.fillStyle = '#000';\n    ctx.fillRect(this.pos.x, this.pos.y, 15, 15);\n  }\n\n  activate() {\n    this.active = true;\n  }\n\n  direction() {\n    const vector = [\n      this.game.player.pos.x - this.pos.x,\n      this.game.player.pos.y - this.pos.y,\n    ]\n    const unitVector = Util.normalize(vector);\n    return new Coord(unitVector[0], unitVector[1]);\n  }\n\n  move(){\n    if (this.active) {\n      const dir = this.direction();\n      const newX = this.pos.x + (dir.x * Ghost.SPEED)\n      const newY = this.pos.y + (dir.y * Ghost.SPEED)\n      let newCoord = new Coord(newX, newY);\n\n      if (this.game.collidingWithWall(newCoord)) {\n        newCoord = new Coord(\n          this.pos.x + (dir.x * Ghost.SPEED),\n          this.pos.y\n        )\n        if (this.game.collidingWithWall(newCoord)){\n          newCoord = new Coord(\n            this.pos.x,\n            this.pos.y + (dir.y * Ghost.SPEED)\n          )\n        } if (this.game.collidingWithWall(newCoord)) {\n          return;\n        }\n      }\n\n      this.pos = newCoord;\n    }\n  }\n\n}\n\nGhost.SPEED = 1;\n\nmodule.exports = Ghost;\n","const GameView = require('./game_view');\nconst Map = require('./map');\n\n// Initialize canvas and display splash\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"Try to Last the Night\");\n  document.addEventListener(\"keydown\", launch);\n\n  const canvas = document.getElementById('canvas');\n  const body = document.getElementsByTagName('body')[0];\n  \n  canvas.width = body.offsetWidth;\n  canvas.height = window.innerHeight - 160;\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillStyle = \"#000\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n});\n\nlet level = 1;\n\nconst launch = () => {\n  const splashes = document.querySelectorAll('.splash');\n  for (let splash of splashes) {\n    splash.style.visibility = \"hidden\";\n  }\n  window.GameView = new GameView(canvas, level, pass, win, lose);\n  window.GameView.start();\n  document.removeEventListener(\"keydown\", launch);\n} \n\nconst pass = () => {\n  const levelSplash = document.getElementById('level-splash');\n  levelSplash.style.visibility = \"visible\";\n\n  const victoryLine = document.getElementById('level-victory');\n  victoryLine.innerHTML = `LEVEL ${level} SURVIVED`;\n\n  ['level_header', 'level_header_2'].forEach(id => {\n    let el = document.getElementById(id);\n    el.innerHTML = Map.LEVELS[level][id];\n  });\n\n  level += 1;\n  // battery.value = 1000;\n  setTimeout(() => {\n    document.addEventListener(\"keydown\", launch)\n  }, 2000);\n}\n\nconst win = () => {\n  const winSplash = document.getElementById('win-splash');\n  winSplash.style.visibility = \"visible\";\n  \n  level = 1;\n  // battery.value = 1000;\n  setTimeout(() => {\n    document.addEventListener(\"keydown\", launch)\n  }, 2000);\n}\n\nconst lose = () => {\n  const loseSplash = document.getElementById('lose-splash');\n  loseSplash.style.visibility = \"visible\";\n  setTimeout(() => {\n    document.addEventListener(\"keydown\", launch)\n  }, 2000);\n}","const Coord = require('./coord');\n\nclass Light {\n  constructor(player) {\n    this.player = player;\n    this.cursPos = new Coord(player.pos.x, player.pos.y);\n    this.a = 300;\n    this.b = this.a / 2;\n    this.c = Math.sqrt((this.a * this.a) + (this.b * this.b));\n    // this.active = true;\n  }\n\n  // toggleLight() {\n  //   this.active ? this.active = false : this.active = true;\n  // }\n  \n  update(mouseX, mouseY) {\n    this.cursPos.x = mouseX;\n    this.cursPos.y = mouseY;\n  }\n\n  findCursorSlope() {\n    return ((this.cursPos.y - this.player.pos.y) / (this.cursPos.x - this.player.pos.x));\n  }\n\n  getAngleDeg() {\n    let angleRad = Math.atan(this.findCursorSlope());\n    let angleDeg = angleRad * 180 / Math.PI;\n    return(angleDeg);\n  }\n\n  // Find the point on a line of slope M at distance L, rotating around Player pos\n  findTriTop() {\n\n    // length of tri from player to cursor\n    let l = this.a;\n\n    let pX = this.player.pos.x;\n    let pY = this.player.pos.y;\n\n    let t = new Coord(0, 0);\n    let m = this.findCursorSlope();\n    \n    if (pX <= this.cursPos.x) {\n      // Slope is 0\n      if (m == 0)\n      {\n        t.x = pX + l;\n        t.y = pY;\n      }\n      // If slope is infinte\n      else if (!isFinite(m))\n      {\n        t.x = pX;\n        t.y = pY + l;\n      } \n      else \n      {\n        let dx = (l / Math.sqrt(1 + (m * m)));\n        let dy = m * dx;\n        t.x = pX + dx;\n        t.y = pY + dy;\n      }\n\n      // Return top of tri\n      return t;\n    }\n    else {\n      // Slope is 0\n      if (m == 0)\n      {\n        t.x = pX + l;\n        t.y = pY;\n      }\n      // If slope is infinte\n      else if (!isFinite(m))\n      {\n        t.x = pX;\n        t.y = pY + l;\n      } \n      else \n      {\n        let dx = (l / Math.sqrt(1 + (m * m)));\n        let dy = m * dx;\n        t.x = pX - dx;\n        t.y = pY - dy;\n      }\n\n      // Return top of tri\n      return t;\n    }\n  }\n\n  // Find the corners of tri given player, tri top, and reciprical angle\n  // Use \n  findCorner1() {\n    // length of top of tri\n    let l = this.a;\n\n    // grab top of tri coord\n    let q = this.findTriTop();\n\n    // grab player and cursor x and y coords\n    let p = this.player.pos\n\n    // initiate corner points\n    let c = new Coord(0, 0)\n    \n    // horizontal rectangle  \n    if (p.x == q.x)  \n    { \n      c.x = (q.x + (l / 2.0)); \n      c.y = q.y; \n    }  \n    // vertical rectangle  \n    else if (p.y == q.y) \n    { \n      c.y = (q.y + (l / 2.0)); \n      c.x = q.x; \n    }  \n    // slanted rectangle  \n    else \n    { \n      // calculate slope of the side  \n      let m = (p.x - q.x) / (q.y - p.y); \n      // let m = this.findReciprocalSlope();\n\n      // calculate displacements along axes  \n      let dx = ((l / Math.sqrt(1 + (m * m))) * 0.5); \n      let dy = m * dx; \n\n      c.x = q.x + dx; \n      c.y = q.y + dy; \n    }\n\n    return c;\n  }\n\n  findCorner2() {\n    // length of top of tri\n    let l = this.a;\n\n    // grab top of tri coord\n    let q = this.findTriTop();\n\n    // grab player and cursor x and y coords\n    let p = this.player.pos\n\n    // initiate corner points\n    let b = new Coord(0, 0);\n    \n    // horizontal rectangle  \n    if (p.x == q.x)  \n    { \n      b.x = (q.x - (l / 2.0)); \n      b.y = q.y; \n    }  \n    // vertical rectangle  \n    else if (p.y == q.y) \n    { \n      b.y = (q.y - (l / 2.0)); \n      b.x = q.x; \n    }  \n    // slanted rectangle  \n    else \n    { \n      // calculate slope of the side  \n      let m = (p.x - q.x) / (q.y - p.y); \n      // let m = this.findReciprocalSlope();\n\n      // calculate displacements along axes  \n      let dx = ((l / Math.sqrt(1 + (m * m))) * 0.5); \n      let dy = m * dx; \n\n      b.x = q.x - dx; \n      b.y = q.y - dy; \n    }\n\n    return b;\n  }\n\n  area(x1,  y1,  x2,  y2, x3,  y3) { \n    return Math.abs((x1*(y2-y3) + x2*(y3-y1)+ x3*(y1-y2))/2.0); \n  } \n\n  revealed(x, y) {    \n    let x1 = Math.abs(this.player.pos.x);\n    let y1 = Math.abs(this.player.pos.y);\n\n    let x2 = Math.abs(this.findCorner1().x);\n    let y2 = Math.abs(this.findCorner1().y);\n\n    let x3 = Math.abs(this.findCorner2().x);\n    let y3 = Math.abs(this.findCorner2().y);\n\n    /* Calculate area of triangle ABC */\n    let A = this.area(x1, y1, x2, y2, x3, y3); \n    \n    /* Calculate area of triangle PBC */  \n    let A1 = this.area(x, y, x2, y2, x3, y3); \n    \n    /* Calculate area of triangle PAC */  \n    let A2 = this.area(x1, y1, x, y, x3, y3); \n    \n    /* Calculate area of triangle PAB */   \n    let A3 = this.area(x1, y1, x2, y2, x, y); \n    \n    let sumAreas = A1 + A2 + A3;\n    \n    /* Check if sum of A1, A2 and A3 is same as A */\n    return (((A - 1) <= sumAreas) && (sumAreas <= (A + 1))); \n  }\n  \n  draw(ctx){\n    let x_midpoint = this.player.pos.x;\n    let y_midpoint = this.player.pos.y;\n\n    let diffX = this.cursPos.x - x_midpoint; \n    let diffY = this.cursPos.y - y_midpoint;\n    \n    // shift starting point to middle of canvas\n    ctx.setTransform(1, 0, 0, 1, x_midpoint, y_midpoint);\n\n    // rotate based on the mouse position\n    ctx.rotate(Math.atan2(diffY, diffX));\n\n    // the triangle\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.a, this.b);\n    ctx.lineTo(this.a, -this.b);\n    ctx.closePath();\n\n    // Add gradient and color stops\n    let gradient = ctx.createLinearGradient(100,0, 370,0);\n    gradient.addColorStop(0, \"white\");\n    gradient.addColorStop(1, 'transparent');\n\n    ctx.globalAlpha = 0.7;\n\n    // if (!this.active) {\n    //   ctx.fillStyle = \"black\"\n    // } else {\n      ctx.fillStyle = gradient;\n    // }\n    \n    ctx.fill();\n    \n    // reset transform\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }\n}\n\nmodule.exports = Light;","module.exports = {\n  LEVELS : {\n    1: {\n      walls: [\n      [0, 0, 0.01, 1],\n      [0, 0.35, 0.2, 0.4],\n      [0.2, 0.15, 0.25, 0.4],\n      [0.2, 0.15, 0.75, 0.2],\n      [0.4, 0.45, 0.45, 0.6],\n      [0, 0.6, 0.6, 0.65],\n      [0.7, 0.2, 0.75, 1],\n      [0.5, 0.65, 0.55, 1]\n      ],\n      playerStart: {x: .05, y: .50},\n      level_header: \"But wait... I'm still trapped!\",\n      level_header_2: \"I need to keep searching for a way out of this darkness.\"\n    },\n    2: {\n    walls: [\n      [0.35, 0, 0.5, 0.05],\n      [0.35, 0, 0.4, 0.3],\n      [0.5, 0, 0.55, 0.3],\n      [0, .25, .35, .3],\n      [.25, .3, .3, .35],\n      [.02, .3, .05, .95],\n      [.05, .9, .6, .95],\n      [.15, .4, .2, .75],\n      [.2, .5, .3, .55],\n      [.25, .55, .3, .6],\n      [.35, .65, .4, .7],\n      [.35, .4, .5, .5],\n      [.4, .67, .6, .7],\n      [.55, .25, .6, .3],\n      [.6, .15, .8, .2],\n      [.6, .2, .65, .4],\n      [.5, .4, .65, .45],\n      [.8, .15, .85, .4],\n      [.7, .4, 1, .45],\n      [.78, .45, .8, .5],\n      [.63, .55, .95, .57],\n      [.99, .45, 1, .5],\n      [.6, .8, .61, 1],\n      [.78, .65, .82, .9],\n      [.61, .99, 1, 1],\n      [.9, .57, .91, 1],\n      [.91, .65, 1, .73]\n      ],\n      playerStart: {x: .45, y: .07},\n      level_header: \"OK, I think I know how to find my way now...\",\n      level_header_2: \"Wait, what was that over there? Did that shadow move...?\"\n    },\n    3: {\n      walls: [\n        [0, 0, 0.01, 1],\n        [0, .85, .8, .9],\n        [0, 0.6, 0.6, 0.65],\n        [.8, 0.33, .85, .9],\n        [.6, .2, .63, .65],\n        [.6, .2, 1, .23],\n        [.73, .3, .75, .85],\n        [.75, .3, 1, .33]\n      ],\n      playerStart: {x: .03, y: .75},\n      ghosts: [\n        {x: .53, y: .57, active: true}, \n        {x: .06, y: .97, active: true},\n        {x: .76, y: .8, active: true},\n        {x: .7, y: .15, active: true},\n      ],\n      level_header: \"Whew, glad they couldn't reach me. Maybe I'm getting close to escaping.\",\n      level_header_2: \"I just hope there's no more of those shadows...\"\n    },\n    4: {\n      walls: [\n        [0, .3, 0.75, .35],\n        [0, 0.6, 0.6, 0.65],\n        [0.55, .6, 0.6, 1],\n        [0.7, .35, 0.75, 1]\n      ],\n      playerStart: {x: .05, y: .49},\n      ghosts: [\n        {x: .35, y: .55},\n        {x: .67, y: .38}\n      ],\n      level_header: \"That was close! I need to be more careful.\",\n      level_header_2: \"Argh! It just got really cold in here...\"\n    },\n    5: {\n      walls: [\n        [0, 0, .18, 0.1],\n        [.25, 0, 1, 0.1],\n        [.1, .18, .14, .22],\n        [.2, .18, .45, .22],\n        [.1, 0, .14, .4],\n        [.2, .22, .24, .4],\n        [.41, .22, .45, .4],\n        [.55, .18, .9, .22],\n        [.55, .22, .59, .4],\n        [.86, .22, .9, .4],\n        [.1, .78, .45, .82],\n        [.1, .6, .14, .8],\n        [.41, .6, .45, .8],\n        [.55, .78, .9, .82],\n        [.55, .6, .59, .8],\n        [.86, .6, .9, .8],\n        [0, 0, 0.04, 1],\n        [0, .96, 1, 1],\n        [.96, 0, 1, 1],\n        [.96, .55, 1, 1]\n      ],\n      playerStart: {x: .05, y: .5},\n      ghosts: [\n        {x: .05, y: .25},\n        {x: .85, y: .15},\n        {x: .15, y: .22},\n        {x: .2, y: .04},\n        {x: .5, y: .9},\n        {x: .9, y: .9}\n      ],\n      level_header: \"Will I ever escape this darkness?!\",\n      level_header_2: \"But what's this... A small ray of light..? Could it be the end...?\"\n    },\n    6: {\n      walls: [\n        [0.35, 0, 0.4, 0.3],\n        [0.5, 0, 0.55, 0.3],\n        [0, .25, .35, .3],\n        [.25, .3, .3, .35],\n        [.02, .3, .05, 1],\n        [.15, .4, .2, .55],\n        [.2, .5, .3, .55],\n        [.25, .55, .3, .6],\n        [.25, .6, .4, .65],\n        [.35, .65, .4, .7],\n        [.35, .4, .5, .5],\n        [.5, .68, .63, .7],\n        [.55, .25, .6, .3],\n        [.6, .15, .8, .2],\n        [.6, .2, .65, .4],\n        [.5, .4, .65, .45],\n        [.8, .15, .85, .4],\n        [.7, .4, 1, .45],\n        [.78, .45, .8, .5],\n        [.63, .55, .95, .57],\n        [.7, .72, .74, .74],\n        [.99, .45, 1, 1],\n        [.6, .7, .61, 1],\n        [.8, .65, .81, .9],\n        [0, .99, 1, 1],\n        [.9, .65, .91, 1],\n        [.15, .65, .16, .85],\n      ],\n      playerStart: {x: .45, y: .95},\n      ghosts: [\n        {x: .21, y: .45},\n        {x: .18, y: .72},\n        {x: .17, y: .75},\n        {x: .16, y: .73},\n        {x: .17, y: .74},\n        {x: .18, y: .75},\n        {x: .94, y: .93},\n        {x: .96, y: .94},\n        {x: .75, y: .24},\n        {x: .75, y: .26},\n        {x: .76, y: .25},\n        {x: .72, y: .75},\n      ]\n    }\n  }\n} \n  \nwindow.wallColor = { color: \"#000\" };","const Coord = require('./coord');\n\nclass Player {\n  constructor(startX, startY, game){\n    this.pos = new Coord(startX, startY);\n    this.game = game;\n  }\n\n  draw(ctx){\n    ctx.fillStyle = \"#fff\";\n    ctx.beginPath();\n    ctx.arc(this.pos.x, this.pos.y, 5, 0, 2 * Math.PI);\n    ctx.fill();\n    // ctx.fillRect(this.pos.x, this.pos.y, 7, 7);\n  }\n\n  move(dir) {\n    const newX = this.pos.x + (Player.MOVES[dir][0] * Player.SPEED);\n    const newY = this.pos.y + (Player.MOVES[dir][1] * Player.SPEED);\n    const newCoord = new Coord(newX, newY);\n\n    const tryCoordTopLeft = new Coord(newX - 3, newY - 3);\n    const tryCoordBottomLeft = new Coord(newX - 3, newY + 3);\n    const tryCoordTopRight = new Coord(newX + 3, newY - 3);\n    const tryCoordBottomRight = new Coord(newX + 3, newY + 3);\n\n    if (\n      this.game.collidingWithWall(tryCoordTopLeft) ||\n      this.game.collidingWithWall(tryCoordBottomLeft) ||\n      this.game.collidingWithWall(tryCoordTopRight) ||\n      this.game.collidingWithWall(tryCoordBottomRight)\n    ) { return; }\n\n    this.pos = newCoord;\n  }\n\n  escaped() {\n    return this.game.escapedMap(this.pos);\n  }\n};\n\nconst sqrt2d2 = Math.SQRT2/2;\n\nPlayer.SPEED = 1.5;\nPlayer.MOVES = {\n  \"U\": [0, -1],\n  \"D\": [0, 1],\n  \"UL\": [-sqrt2d2, -sqrt2d2],\n  \"DL\": [-sqrt2d2, sqrt2d2],\n  \"L\": [-1, 0],\n  \"R\": [1, 0],\n  \"UR\": [sqrt2d2, -sqrt2d2],\n  \"DR\": [sqrt2d2, sqrt2d2]\n}\n\nmodule.exports = Player;","const Util = {\n  inherits(Child, Parent) {\n    function Surrogate (){};\n    Surrogate.prototype = Parent.prototype;\n    Child.prototype = new Surrogate();\n    Child.prototype.constructor = Child;\n  },\n\n  // Normalize the length of the vector to 1, maintaining direction.\n  normalize(vec) {\n    const norm = Util.magnitude(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  // Find distance between two points.\n  magnitude(vec) {\n    return Math.sqrt(\n      Math.pow(vec[0], 2) + Math.pow(vec[1], 2)\n    );\n  },\n  // Return a randomly oriented vector with the given length.\n  randomVec(length) {\n    const deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale(vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  }\n};\n\nmodule.exports = Util;","const Coord = require('./coord');\n\nclass Wall {\n  constructor(topX, topY, bottomX, bottomY){\n    this.topLeft = new Coord(topX, topY);\n    this.bottomRight = new Coord(bottomX, bottomY);\n    this.width = bottomX - topX;\n    this.height = bottomY - topY;\n  }\n\n  draw(ctx) {\n    window.fillStyle = () => window.wallColor;\n    ctx.fillStyle = window.fillStyle().color;\n    ctx.fillRect(this.topLeft.x, this.topLeft.y, this.width, this.height);\n  }\n}\n\nmodule.exports = Wall;"],"sourceRoot":""}